class Solution {
	public:
		int CountWays(string str){
		    int n=str.length();
		    int dp[n];
		    dp[0]=1;
		    dp[1]=1;
		    if(str[0] == '0')
				return 0;
				long long int mod = 1e9 + 7;
		    for(int i=1;i<n;i++)
		    {
		        if(str.at(i-1)=='0' && str.at(i)=='0')
		        {
		            dp[i]=0;
		        }
		        else if(str.at(i-1)!='0' && str.at(i)=='0')
		        {
		            if(str.at(i-1)=='1' || str.at(i-1)=='2')
		            {
		                dp[i]=(i>=2 ? dp[i-2]:1);
		            }
		            else dp[i]=0;
		        }
		        else if(str.at(i-1)=='0' && str.at(i)!='0')
		        {
		        dp[i]=dp[i-1];
		        }
		        else
		        {
		            if(stoi(str.substr(i-1,2))<=26)
		            {
		                dp[i]=dp[i-1]+(i>=2 ? dp[i-2]:1);
		            }
		            else
		            {
		                dp[i]=dp[i-1];
		            }
		        }
		        dp[i] %= mod;
		    }
		    return dp[n-1];
		}

};
